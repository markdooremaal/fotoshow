name: Build and Push fotoshow Image

on:
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/fotoshow

jobs:
  build:
    name: Build (compile and test)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout pipeline repo
        uses: actions/checkout@v4

      - name: Checkout markdooremaal/fotoshow source
        uses: actions/checkout@v4
        with:
          repository: markdooremaal/fotoshow
          path: fotoshow
          fetch-depth: 1

      # Build steps
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Grant execute permission for Gradle
        run: chmod +x fotoshow/gradlew

      - name: Build Quarkus app using Gradle
        run: |
          cd fotoshow
          ./gradlew build -Dquarkus.package.type=fast-jar --no-daemon

      # Upload workspace artifact
      - name: Upload fotoshow workspace
        uses: actions/upload-artifact@v4
        with:
          name: fotoshow-workspace
          path: fotoshow

  create-image:
    name: Create image (build only)
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download fotoshow workspace
        uses: actions/download-artifact@v4
        with:
          name: fotoshow-workspace
          path: fotoshow

      # Create image steps
      - name: Prepare Docker context
        run: |
          cd fotoshow
          # Verify target/quarkus-app exists
          ls -la target/quarkus-app

      - name: Build Docker image
        run: |
          cd fotoshow
          docker build -t $IMAGE_NAME:latest .

      - name: Save Docker image as tarball
        run: |
          mkdir -p /tmp
          docker save $IMAGE_NAME:latest -o /tmp/image.tar

      - name: Upload built image
        uses: actions/upload-artifact@v4
        with:
          name: built-image
          path: /tmp/image.tar

  push:
    name: Push image to GHCR
    runs-on: ubuntu-latest
    needs: create-image
    steps:
      - name: Download built image
        uses: actions/download-artifact@v4
        with:
          name: built-image
          path: /tmp

      - name: Load Docker image
        run: docker load -i /tmp/image.tar

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push image
        run: docker push $IMAGE_NAME:latest
